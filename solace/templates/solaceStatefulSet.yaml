# Create the StatefullSet, (petset), needed for redundancy
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "solace.fullname" . }}
  labels:
    app: {{ template "solace.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "solace.fullname" . }}-discovery
  replicas: {{- if .Values.solace.redundancy }} 3 {{- else }} 1 {{- end }}
  podManagementPolicy: Parallel
  updateStrategy: 
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "solace.name" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.image.pullSecretName }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecretName}}
{{- end}}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        resources:
          requests:
{{- if eq .Values.solace.size "dev" }}
            cpu: "0.2"
            memory: 0.8Gi
{{- else if eq .Values.solace.size "prod100" }}
            cpu: "1.2"
            memory: 2Gi
{{- else if eq .Values.solace.size "prod1k" }}
            cpu: "1.2"
            memory: 4Gi
{{- end }}
          limits:
{{- if eq .Values.solace.size "dev100" }}
            cpu: "1"
            memory: 2Gi
{{- else if eq .Values.solace.size "prod100" }}
            cpu: "2"
            memory: 3Gi
{{- else if eq .Values.solace.size "prod1k" }}
            cpu: "2"
            memory: 7.5Gi
{{- end }}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 300
          timeoutSeconds: 5
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 5
          exec:
            command:
            - /mnt/disks/solace/readiness_check.sh
            - "7"
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_NICE
        env:
        - name: STATEFULSET_NAME
          value: {{ template "solace.fullname" . }}
        - name: STATEFULSET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        command:
         - bash
         - "-ec"
         - |
           source /mnt/disks/solace/init.sh
           # not using postinstall hooks because of order dependencies
           # launch config check then Solace so VCMR can provide return code
           nohup /mnt/disks/solace/config-sync-check.sh &
           /usr/sbin/boot.sh

        volumeMounts:
        - name: config-map
          mountPath: /mnt/disks/solace
        - name: secrets
          mountPath: /mnt/disks/secrets
          readOnly: true
        - name: dshm
          mountPath: /dev/shm
        #- name: data
        #  mountPath: /usr/sw/jail
        #  subPath: jail
        - name: data
          mountPath: /usr/sw/var
          subPath: var
        - name: data
          mountPath: /usr/sw/internalSpool
          subPath: internalSpool
        - name: data
          mountPath: /usr/sw/adb
          subPath: adb
        #- name: data
        #  mountPath: /var/lib/solace/diags
        #  subPath: diags
        - name: data
          mountPath: /usr/sw/internalSpool/softAdb
          subPath: softAdb
        ports:
        - containerPort: 2222
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 55555
          protocol: TCP
        - containerPort: 55003
          protocol: TCP
        - containerPort: 55443
          protocol: TCP
        - containerPort: 60943
          protocol: TCP
        - containerPort: 60080
          protocol: TCP
        - containerPort: 60443
          protocol: TCP
        {{- range $item := .Values.service.addInternalPort }}
        - containerPort: {{ $item.port }}
          protocol: {{ $item.protocol }}
        {{- end}}
      volumes:
        - name: config-map
          configMap:
            name: {{ template "solace.fullname" . }}
            defaultMode: 0755
        - name: secrets
          secret:
            secretName: {{ template "solace.fullname" . }}-secrets
            defaultMode: 0400
        - name: dshm
          emptyDir:
            medium: Memory
{{- if .Values.storage }}
  {{- if not .Values.storage.persistent }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
    {{- if .Values.storage.useStorageClass }}
      storageClassName: {{ .Values.storage.useStorageClass }}
    {{- else }}
      storageClassName: standard
    {{- end}}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.storage.size}}
  {{- end }}
{{- end}}
